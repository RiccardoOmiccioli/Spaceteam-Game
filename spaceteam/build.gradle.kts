/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    java
    id("org.openjfx.javafxplugin") version "0.0.14"
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    val javaFxVersion = "23"
    implementation("org.openjfx:javafx-base:$javaFxVersion")
    implementation("org.openjfx:javafx-controls:$javaFxVersion")
    implementation("org.openjfx:javafx-graphics:$javaFxVersion")

    implementation("com.google.code.gson:gson:2.11.0")

    implementation("org.eclipse.paho:org.eclipse.paho.mqttv5.client:1.2.5")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "it.unibo.spaceteam.Main"
}

javafx {
    version = "23"
    modules("javafx.controls", "javafx.fxml")
}


tasks.getByName<JavaExec>("run") {
    project.findProperty("mqttBrokerAddress")?.let { systemProperty("mqttBrokerAddress", it) } ?: systemProperty("mqttBrokerAddress", "tcp://127.0.0.1:1883")
}


tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    systemProperty("mqttBrokerAddress", "tcp://127.0.0.1:1883")
}

tasks.shadowJar {
    archiveBaseName.set("Spaceteam")  // Name of the Uber JAR
    archiveVersion.set("")            // Version of the Uber JAR
    archiveClassifier.set("")         // Classifier of the Uber JAR (default=all)
    doFirst {
        val brokerAddress = project.findProperty("mqttBrokerAddress")?.toString() ?: "tcp://127.0.0.1:1883"
        manifest {
            attributes(
                "MQTT-Broker-Address" to brokerAddress
            )
        }
    }
    manifest {
        attributes(
            "Main-Class" to "it.unibo.spaceteam.Main"
        )
    }
}
